class Solution{
    static long trappingWater(int arr[], int n) { 
        
        int left[] = new int[n];
        int right[] = new int[n];
        
        left[0]=arr[0];
        right[n-1]=arr[n-1];
        
        for(int i=1;i<n;i++){
            left[i] = Math.max(left[i-1],arr[i]);
        }
        for(int i=n-2;i>=0;i--){
            right[i] = Math.max(right[i+1],arr[i]);
        }
        
        int total[] = new int[n];
        
        for(int i=0;i<n;i++){
            total[i] = Math.max(Math.min(left[i],right[i])-arr[i],0);
        }
        
        long ans=0;
        for(int i=0;i<n;i++){
            ans+=total[i];
        }
        
        return ans;
    } 
}
