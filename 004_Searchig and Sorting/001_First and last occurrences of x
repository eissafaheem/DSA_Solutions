class GFG
{
    static int findLowerBound(long arr[], int x){
        int n = arr.length;
        int s = 0, e = n-1;
        
        while(s<=e){
            int mid = (s+e)/2;
            
            if(arr[mid]<x){
                s=mid+1;
            }else{
                e=mid-1;
            }
        }
        return s;
    }
    ArrayList<Long> find(long arr[], int n, int x)
    {
        long lb = findLowerBound(arr,x);
        long ub = findLowerBound(arr,x+1)-1;
        
        
        ArrayList<Long>a= new ArrayList<Long>();
        long m = -1;
        
        if(lb<n && arr[(int)lb]==x){
            a.add(lb);
            a.add(ub);
            
            return a;
        }
        
        a.add(m);
        a.add(m);
        return a;
    }
}