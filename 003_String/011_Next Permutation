//Check the one in arrays for more clarification

class Solution{
    
    static void swap(int[] arr, int i, int j)
    {
        int temp = arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
    static void reverse(int arr[], int a)
    {
        int s=a, e=arr.length-1;
        
        while(s<e)
        {
            swap(arr,s,e);
            s++;
            e--;
        }
    }
   
    static List<Integer> nextPermutation(int N, int arr[]){
        
        List<Integer> l = new ArrayList<>();
        
        int a = -1;
        int n=arr.length;
        for(int i=0;i<n-1;i++){
            if(arr[i]<arr[i+1]){
                a=i;
            }
        }
        
        
        if(a==-1){
            reverse(arr,0);
            for(int i=0;i<n;i++){
                l.add(arr[i]);
            }
            return l;
        }
        
        int b=0;
        for(int i=n-1;i>=0;i--){
            if(arr[i]>arr[a]){
                b=i;
                break;
            }
        }
        
        swap(arr,a,b);
        reverse(arr,a+1);
        
        for(int i=0;i<n;i++){
        
            l.add(arr[i]);
            
        }
        
        return l;
        
    }
}